//
//  CodeFileAccessoryItemsGridView.m
//  ArtCode
//
//  Created by Nicola Peduzzi on 17/11/11.
//  Copyright (c) 2011 __MyCompanyName__. All rights reserved.
//

#import "CodeFileAccessoryItemsGridView.h"
#import "CodeFileAccessoryAction.h"

@implementation CodeFileAccessoryItemsGridView {
    NSMutableArray *_accessoryActionsButtons;
}

@synthesize accessoryActions, itemInsents, itemSize, didSelectActionItemBlock;

- (void)setAccessoryActions:(NSArray *)value
{
    if (value == accessoryActions)
        return;
    [self willChangeValueForKey:@"accessoryActions"];
    accessoryActions = [value copy];
    [_accessoryActionsButtons makeObjectsPerformSelector:@selector(removeFromSuperview)];
    if ([accessoryActions count] > 0)
    {
        // Create button's support array
        if (!_accessoryActionsButtons)
            _accessoryActionsButtons = [NSMutableArray arrayWithCapacity:[accessoryActions count]];
        else if ([_accessoryActionsButtons count] > [accessoryActions count])
            [_accessoryActionsButtons removeObjectsInRange:NSMakeRange([accessoryActions count], [_accessoryActionsButtons count] - [accessoryActions count])];
        
        // Populate buttons array with buttons generated by actions
        UIImage *buttonBackgroundImage = [[UIImage imageNamed:@"accessoryView_itemBackground"] resizableImageWithCapInsets:UIEdgeInsetsMake(0, 12, 0, 12)];
        [accessoryActions enumerateObjectsUsingBlock:^(CodeFileAccessoryAction *action, NSUInteger actionIndex, BOOL *stop) {
            UIButton *button = nil;
            if (actionIndex < [_accessoryActionsButtons count])
            {
                button = [_accessoryActionsButtons objectAtIndex:actionIndex];
            }
            else
            {
                button = [UIButton new];
                [button setBackgroundImage:buttonBackgroundImage forState:UIControlStateNormal];
                [button setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
                button.titleLabel.font = [UIFont systemFontOfSize:21];
                [button addTarget:self action:@selector(_buttonAction:) forControlEvents:UIControlEventTouchUpInside];
                [_accessoryActionsButtons addObject:button];
            }
            [button setTitle:action.title forState:UIControlStateNormal];
            [button setImage:[UIImage imageNamed:action.imageName] forState:UIControlStateNormal];
            [self addSubview:button];
        }];
    }
    [self didChangeValueForKey:@"accessoryActions"];
}

- (void)layoutSubviews
{
    CGSize boundSizeLimit = self.bounds.size;
    boundSizeLimit.width -= itemSize.width + itemInsents.right;
    boundSizeLimit.height -= itemSize.height + itemInsents.bottom;
    
    CGRect itemFrame = (CGRect){ CGPointMake(itemInsents.left, itemInsents.top), itemSize };
    for (UIButton *button in _accessoryActionsButtons)
    {
        button.frame = itemFrame;
        itemFrame.origin.x += itemFrame.size.width + itemInsents.right + itemInsents.left;
        if (itemFrame.origin.x > boundSizeLimit.width)
        {
            itemFrame.origin.x = itemInsents.left;
            itemFrame.origin.y += itemFrame.size.height + itemInsents.bottom + itemInsents.top;
        }
    }
}

- (void)_buttonAction:(UIButton *)button
{
    if (didSelectActionItemBlock)
        didSelectActionItemBlock(self, [accessoryActions objectAtIndex:[_accessoryActionsButtons indexOfObject:button]]);
}

@end
